{"version":3,"sources":["framework/Modal.tsx","pages/Instance.tsx"],"names":["Modal","props","useEffect","handleKeyDown","event","console","log","keyCode","onClose","document","addEventListener","removeEventListener","className","open","onClick","children","Instance","history","useHistory","replace","location","pathname","replaceAll"],"mappings":"iNAUO,SAASA,EAAMC,GAerB,OAdAC,qBAAU,WACT,SAASC,EAAcC,GAAe,IAAD,EACpCC,QAAQC,IAAIF,GAC6B,KAApCA,EAAwBG,UAC7B,UAAAN,EAAMO,eAAN,cAAAP,IAKD,OAFAQ,SAASC,iBAAiB,UAAWP,GAE9B,WACNM,SAASE,oBAAoB,UAAWR,MAEvC,IAGF,cAAC,IAAD,UACC,sBAAKS,UAAS,gBAAWX,EAAMY,KAAO,OAAS,IAA/C,UACC,uBAAMD,UAAU,gBAAhB,UACC,sBAAMA,UAAU,QAAQE,QAASb,EAAMO,QAAvC,SACC,mBAAGI,UAAU,iBAEd,sBAAMA,UAAU,aAAhB,oBAEAX,EAAMc,cC/BI,SAASC,EAASf,GAChC,IAAMgB,EAAUC,cAEhB,OACC,cAAClB,EAAD,CAAOa,MAAM,EAAML,QAAS,kBAAMS,EAAQE,QAAQF,EAAQG,SAASC,SAASC,WAAW,YAAa,MAApG,SACC","file":"static/js/6.a32b9143.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport \"fosscord-css/scss/modal.scss\";\nimport { Route } from \"react-router\";\n\nexport interface ModalProps {\n\tchildren?: React.ReactNode;\n\topen?: boolean;\n\tonClose?: () => any;\n}\n\nexport function Modal(props: ModalProps) {\n\tuseEffect(() => {\n\t\tfunction handleKeyDown(event: Event) {\n\t\t\tconsole.log(event);\n\t\t\tif ((event as KeyboardEvent).keyCode !== 27) return; // matches Escape\n\t\t\tprops.onClose?.();\n\t\t}\n\n\t\tdocument.addEventListener(\"keydown\", handleKeyDown);\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"keydown\", handleKeyDown);\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<Route>\n\t\t\t<div className={`modal ${props.open ? \"open\" : \"\"}`}>\n\t\t\t\t<span className=\"close-wrapper\">\n\t\t\t\t\t<span className=\"close\" onClick={props.onClose}>\n\t\t\t\t\t\t<i className=\"icon times\"></i>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className=\"text title\">ESC</span>\n\t\t\t\t</span>\n\t\t\t\t{props.children}\n\t\t\t</div>\n\t\t</Route>\n\t);\n}\n","import { useHistory } from \"react-router\";\nimport { Modal } from \"../framework/Modal\";\n\nexport default function Instance(props: any) {\n\tconst history = useHistory();\n\n\treturn (\n\t\t<Modal open={true} onClose={() => history.replace(history.location.pathname.replaceAll(\"/instance\", \"\"))}>\n\t\t\t<h1>not finished yet</h1>\n\t\t</Modal>\n\t);\n}\n"],"sourceRoot":""}